# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_eureka_server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Eureka Service with Maven
        run: mvn -B clean install --file movie-backend/eureka-server/pom.xml
      - name: Build docker
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: tejajagadeep/movie-app-eureka-server
          tags: latest
          registry: docker.io
          dockerfile: movie-backend/eureka-server/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  build_config_server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Config Service with Maven
        run: mvn -B clean install --file movie-backend/config-server/pom.xml

  build_api_gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Api Gateway with Maven
        run: mvn -B clean install --file movie-backend/api-gateway/pom.xml

  build_authentication_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Authentication Service with Maven
        run: mvn -B clean install --file movie-backend/authentication-service/pom.xml

  build_userprofile_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build User Profile Service with Maven
        run: mvn -B clean install --file movie-backend/userprofile-service/pom.xml

  build_movie_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Movie Service with Maven
        run: mvn -B clean install --file movie-backend/movie-service/pom.xml

  build_wishlist_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Wishlist Service with Maven
        run: mvn -B clean install --file movie-backend/wishlist-service/pom.xml

  build_swagger_server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build Swagger Server with Maven
        run: mvn -B clean install --file movie-backend/swagger-server/pom.xml
