version: "3.7"

name: my-movie-project

networks:
  my-movie-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - my-movie-network
  
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka-container
    depends_on:
      - zookeeper
    ports:
      - 9092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-movie-network

  mysqldb:
    image: mysql:8.0.36
    container_name: mysql-container
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: dockerDB
    networks:
      - my-movie-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root1234
    networks:
      - my-movie-network

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-container
    ports:
      - "9411:9411"
    networks:
      - my-movie-network

  eureka-server:
    image: tejajagadeep/movie-app-eureka-server:latest
    container_name: eureka-container
    ports:
      - "8761:8761"
    networks:
      - my-movie-network

  config-server:
    image: tejajagadeep/movie-app-config-server:latest
    container_name: config-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    ports:
      - "8888:8888"
    networks:
      - my-movie-network
    depends_on:
      - eureka-server
    links:
      - eureka-server

  authentication-service:
    image: tejajagadeep/movie-app-authentication-service:latest
    container_name: authentication-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/authDB?createDatabaseIfNotExist=true
      - spring.kafka.consumer.bootstrap-servers=kafka:9092
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      # - spring.jpa.hibernate.ddl-auto=create
      - swagger.server.url=http://localhost:8769/,http://localhost:4200/
    ports:
      - "8090:8090"
    networks:
      - my-movie-network
    depends_on:
      - mysqldb
      - eureka-server
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
      - mysqldb
      - zookeeper
      - kafka
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/authentication-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  userprofile-service:
    image: tejajagadeep/movie-app-userprofile-service:latest
    container_name: userprofile-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/userprofileDB?createDatabaseIfNotExist=true
      - spring.kafka.producer.bootstrap-servers=kafka:9092
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      # - spring.jpa.hibernate.ddl-auto=create
      - swagger.server.url=http://localhost:8769/,http://localhost:4200/
    ports:
      - "8092:8092"
    networks:
      - my-movie-network
    depends_on:
      - mysqldb
      - eureka-server
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
      - mysqldb
      - zookeeper
      - kafka
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/userprofile-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  movie-service:
    image: tejajagadeep/movie-app-movie-service:latest
    container_name: movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      - swagger.server.url=http://localhost:8769/,http://localhost:4200/
    ports:
      - "8081:8081"
    networks:
      - my-movie-network
    depends_on:
      - eureka-server
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/movie-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  wishlist-service:
    image: tejajagadeep/movie-app-wishlist-service:latest
    container_name: wishlist-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      - swagger.server.url=http://localhost:8769/,http://localhost:4200/
      - spring.data.mongodb.uri=mongodb://root:root1234@mongodb:27017/wishlistdb?authSource=admin
    ports:
      - "8082:8082"
    networks:
      - my-movie-network
    depends_on:
      - eureka-server
      - config-server
      - mongodb
    links:
      - eureka-server
      - config-server
      - mongodb
      - zipkin-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/wishlist-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  api-gateway:
    image: tejajagadeep/movie-app-api-gateway:latest
    container_name: gateway-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
    ports:
      - "8765:8765"
    networks:
      - my-movie-network
    depends_on:
      - eureka-server
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/api-gateway-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  swagger-server:
    image: tejajagadeep/movie-app-swagger-server:latest
    container_name: swagger-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
    ports:
      - "8769:8769" # if you are changing port add environment: - swagger.server.url=http://localhost:<new-swagger-port>/,http://localhost:<new-movie-app-angular-port>/ to authentication-service, userprofile-service, movie-service, wishlist-service
    networks:
      - my-movie-network
    depends_on:
      - eureka-server
      - config-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/swagger-server-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8769/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  movie-app:
    image: tejajagadeep/movie-app-angular:latest
    container_name: movie-app-angular
    ports:
      - "4200:80" # if you are changing port add environment: - swagger.server.url=http://localhost:<new-swagger-port>/,http://localhost:<new-movie-app-angular-port>/ to authentication-service, userprofile-service, movie-service, wishlist-service
    networks:
      - my-movie-network