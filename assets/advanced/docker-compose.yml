version: "3.7"

name: my-movie-project

networks:
  my-movie-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper-movie-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2182:2181
    networks:
      - my-movie-network

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka-movie-container
    depends_on:
      - zookeeper
    ports:
      - 9093:29092 # if you are changing port, change: - spring.kafka.consumer.bootstrap-servers=kafka:<new-port> - spring.kafka.producer.bootstrap-servers=kafka:<new-port>
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-movie-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-movie-container
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    ports:
      - "9090:8080"
    depends_on:
      - kafka
    networks:
      - my-movie-network

  mysqldb:
    image: mysql:8.0.36
    container_name: mysql-movie-container
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: dockerDB
    networks:
      - my-movie-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-movie-container
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root1234
    networks:
      - my-movie-network

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-movie-container
    ports:
      - "9411:9411" # if you are changing port, change env: - management.zipkin.tracing.endpoint=http://zipkin-server:<new-port>/api/v2/spans
    networks:
      - my-movie-network

  eureka-server:
    image: tejajagadeep/movie-app-eureka-server:latest
    container_name: eureka-movie-container
    ports:
      - "8761:8761" # if you are changing port, change env: - eureka.client.service-url.defaultZone=http://eureka-server:<<new-port>/eureka
    networks:
      - my-movie-network

  config-server:
    image: tejajagadeep/movie-app-config-server:latest
    container_name: config-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    ports:
      - "8888:8888" # if you are changing port, change env: - spring.config.import=optional:configserver:http://config-server:<new-port>/
    networks:
      - my-movie-network
    links:
      - eureka-server

  authentication-service:
    image: tejajagadeep/movie-app-authentication-service:latest
    container_name: authentication-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/authDB?createDatabaseIfNotExist=true
      - spring.kafka.consumer.bootstrap-servers=kafka:9093
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      # - spring.jpa.hibernate.ddl-auto=create
      - allowed.cors.urls=http://localhost:8769/,http://localhost:4201/,http://localhost:4200/,
    ports:
      - "8090:8090" # if you are changing port in change env for swagger-server - springdoc.swagger-ui.urls[0].url=http://localhost:<new-port>/v3/api-docs
    networks:
      - my-movie-network
    depends_on:
      - mysqldb
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
      - mysqldb
      - zookeeper
      - kafka
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/authentication-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  userprofile-service:
    image: tejajagadeep/movie-app-userprofile-service:latest
    container_name: userprofile-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/userprofileDB?createDatabaseIfNotExist=true
      - spring.kafka.producer.bootstrap-servers=kafka:9093
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      # - spring.jpa.hibernate.ddl-auto=create
      - allowed.cors.urls=http://localhost:8769/,http://localhost:4201/,http://localhost:4200/
    ports:
      - "8092:8092" # if you are changing port in change env for swagger-server - springdoc.swagger-ui.urls[1].url=http://localhost:<new-port>/v3/api-docs
    networks:
      - my-movie-network
    depends_on:
      - mysqldb
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
      - mysqldb
      - zookeeper
      - kafka
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/userprofile-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  movie-service:
    image: tejajagadeep/movie-app-movie-service:latest
    container_name: movie-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      - allowed.cors.urls=http://localhost:8769/,http://localhost:4201/,http://localhost:4200/
    ports:
      - "8081:8081" # if you are changing port in change env for swagger-server - springdoc.swagger-ui.urls[2].url=http://localhost:<new-port>/v3/api-docs
    networks:
      - my-movie-network
    depends_on:
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/movie-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  wishlist-service:
    image: tejajagadeep/movie-app-wishlist-service:latest
    container_name: wishlist-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
      - allowed.cors.urls=http://localhost:8769/,http://localhost:4201/,http://localhost:4200/
      - spring.data.mongodb.uri=mongodb://root:root1234@mongodb:27017/wishlistdb?authSource=admin
    ports:
      - "8082:8082" # if you are changing port in change env for swagger-server - springdoc.swagger-ui.urls[3].url=http://localhost:<new-port>/v3/api-docs
    networks:
      - my-movie-network
    depends_on:
      - config-server
      - mongodb
    links:
      - eureka-server
      - config-server
      - mongodb
      - zipkin-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/wishlist-service-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  api-gateway:
    image: tejajagadeep/movie-app-api-gateway:latest
    container_name: gateway-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans
    ports:
      - "8765:8765"
    networks:
      - my-movie-network
    depends_on:
      - config-server
    links:
      - eureka-server
      - config-server
      - zipkin-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/api-gateway-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  swagger-server:
    image: tejajagadeep/movie-app-swagger-server:latest
    container_name: swagger-movie-container
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.config.import=optional:configserver:http://config-server:8888/
      - springdoc.swagger-ui.urls[0].name=authentication-service
      - springdoc.swagger-ui.urls[0].url=http://localhost:8090/v3/api-docs
      - springdoc.swagger-ui.urls[1].name=userprofile-service
      - springdoc.swagger-ui.urls[1].url=http://localhost:8092/v3/api-docs
      - springdoc.swagger-ui.urls[2].name=movie-service
      - springdoc.swagger-ui.urls[2].url=http://localhost:8081/v3/api-docs
      - springdoc.swagger-ui.urls[3].name=wishlist-service
      - springdoc.swagger-ui.urls[3].url=http://localhost:8082/v3/api-docs
    ports:
      - "8769:8769" # if you are changing port add environment: - allowed.cors.urls=<previous_env+>,http://localhost:<new-swagger-server-port>/
    networks:
      - my-movie-network
    depends_on:
      - config-server
    restart: on-failure
    entrypoint: sh -c "apk --no-cache add curl && /bin/sh -c 'until curl -sSf http://config-server:8888/actuator/health; do echo \"Waiting for config-server to be healthy...\"; sleep 5; done' && java -jar /usr/src/swagger-server-0.0.1-SNAPSHOT.jar"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8769/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10

  movie-app:
    image: tejajagadeep/movie-app-angular:latest
    container_name: movie-app-angular
    ports:
      - "4201:4201" # sorry you can't change port for this due to page reload configuration by nginx
    networks:
      - my-movie-network
